{"id":"js/app.svelte","dependencies":[{"name":"/Users/jochenpanjaer/JP Graphics/Web development/Projects/CouplShoppr/package.json","includedInParent":true,"mtime":1578494660587},{"name":"svelte/internal","loc":{"line":22,"column":7},"parent":"/Users/jochenpanjaer/JP Graphics/Web development/Projects/CouplShoppr/src/js/app.svelte","resolved":"/Users/jochenpanjaer/JP Graphics/Web development/Projects/CouplShoppr/node_modules/svelte/internal/index.mjs"},{"name":"svelte","loc":{"line":24,"column":24},"parent":"/Users/jochenpanjaer/JP Graphics/Web development/Projects/CouplShoppr/src/js/app.svelte","resolved":"/Users/jochenpanjaer/JP Graphics/Web development/Projects/CouplShoppr/node_modules/svelte/index.mjs"},{"name":"./data/connectionUtility","loc":{"line":25,"column":38},"parent":"/Users/jochenpanjaer/JP Graphics/Web development/Projects/CouplShoppr/src/js/app.svelte","resolved":"/Users/jochenpanjaer/JP Graphics/Web development/Projects/CouplShoppr/src/js/data/connectionUtility.js"},{"name":"./components/logo.svelte","loc":{"line":26,"column":17},"parent":"/Users/jochenpanjaer/JP Graphics/Web development/Projects/CouplShoppr/src/js/app.svelte","resolved":"/Users/jochenpanjaer/JP Graphics/Web development/Projects/CouplShoppr/src/js/components/logo.svelte"},{"name":"./components/baseContainer.svelte","loc":{"line":27,"column":26},"parent":"/Users/jochenpanjaer/JP Graphics/Web development/Projects/CouplShoppr/src/js/app.svelte","resolved":"/Users/jochenpanjaer/JP Graphics/Web development/Projects/CouplShoppr/src/js/components/baseContainer.svelte"},{"name":"_css_loader","parent":"/Users/jochenpanjaer/JP Graphics/Web development/Projects/CouplShoppr/src/js/app.svelte","resolved":"/Users/jochenpanjaer/JP Graphics/Web development/Projects/CouplShoppr/node_modules/parcel-bundler/src/builtins/css-loader.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _internal = require(\"svelte/internal\");\n\nvar _svelte = require(\"svelte\");\n\nvar _connectionUtility = require(\"./data/connectionUtility\");\n\nvar _logo = _interopRequireDefault(require(\"./components/logo.svelte\"));\n\nvar _baseContainer = _interopRequireDefault(require(\"./components/baseContainer.svelte\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* js/app.svelte generated by Svelte v3.16.7 */\nconst file = \"js/app.svelte\";\n\nfunction add_css() {\n  var style = (0, _internal.element)(\"style\");\n  style.id = \"svelte-1kyw3xo-style\";\n  style.textContent = \"button.svelte-1kyw3xo{width:6.5rem;margin:0 .2rem;height:100%}\\n\";\n  (0, _internal.append_dev)(document.head, style);\n} // (55:12) {:else}\n\n\nfunction create_else_block(ctx) {\n  let t0;\n  let br;\n  let t1;\n  const block = {\n    c: function create() {\n      t0 = (0, _internal.text)(\"add\");\n      br = (0, _internal.element)(\"br\");\n      t1 = (0, _internal.text)(\"items\");\n      (0, _internal.add_location)(br, file, 55, 19, 1138);\n    },\n    m: function mount(target, anchor) {\n      (0, _internal.insert_dev)(target, t0, anchor);\n      (0, _internal.insert_dev)(target, br, anchor);\n      (0, _internal.insert_dev)(target, t1, anchor);\n    },\n    d: function destroy(detaching) {\n      if (detaching) (0, _internal.detach_dev)(t0);\n      if (detaching) (0, _internal.detach_dev)(br);\n      if (detaching) (0, _internal.detach_dev)(t1);\n    }\n  };\n  (0, _internal.dispatch_dev)(\"SvelteRegisterBlock\", {\n    block,\n    id: create_else_block.name,\n    type: \"else\",\n    source: \"(55:12) {:else}\",\n    ctx\n  });\n  return block;\n} // (53:12) {#if store.showForm}\n\n\nfunction create_if_block(ctx) {\n  let t0;\n  let br;\n  let t1;\n  const block = {\n    c: function create() {\n      t0 = (0, _internal.text)(\"hide\");\n      br = (0, _internal.element)(\"br\");\n      t1 = (0, _internal.text)(\"items\");\n      (0, _internal.add_location)(br, file, 53, 20, 1088);\n    },\n    m: function mount(target, anchor) {\n      (0, _internal.insert_dev)(target, t0, anchor);\n      (0, _internal.insert_dev)(target, br, anchor);\n      (0, _internal.insert_dev)(target, t1, anchor);\n    },\n    d: function destroy(detaching) {\n      if (detaching) (0, _internal.detach_dev)(t0);\n      if (detaching) (0, _internal.detach_dev)(br);\n      if (detaching) (0, _internal.detach_dev)(t1);\n    }\n  };\n  (0, _internal.dispatch_dev)(\"SvelteRegisterBlock\", {\n    block,\n    id: create_if_block.name,\n    type: \"if\",\n    source: \"(53:12) {#if store.showForm}\",\n    ctx\n  });\n  return block;\n}\n\nfunction create_fragment(ctx) {\n  let div2;\n  let div0;\n  let t0;\n  let div1;\n  let button0;\n  let t1;\n  let button1;\n  let t2;\n  let br;\n  let t3;\n  let t4;\n  let current;\n  let dispose;\n  const logo = new _logo.default({\n    props: {\n      partOne: \"coupl\",\n      partTwo: \"shoppr\"\n    },\n    $$inline: true\n  });\n\n  function select_block_type(ctx, dirty) {\n    if (\n    /*store*/\n    ctx[0].showForm) return create_if_block;\n    return create_else_block;\n  }\n\n  let current_block_type = select_block_type(ctx, -1);\n  let if_block = current_block_type(ctx);\n  const basecontainer = new _baseContainer.default({\n    props: {\n      store:\n      /*store*/\n      ctx[0]\n    },\n    $$inline: true\n  });\n  const block = {\n    c: function create() {\n      div2 = (0, _internal.element)(\"div\");\n      div0 = (0, _internal.element)(\"div\");\n      (0, _internal.create_component)(logo.$$.fragment);\n      t0 = (0, _internal.space)();\n      div1 = (0, _internal.element)(\"div\");\n      button0 = (0, _internal.element)(\"button\");\n      if_block.c();\n      t1 = (0, _internal.space)();\n      button1 = (0, _internal.element)(\"button\");\n      t2 = (0, _internal.text)(\"new\");\n      br = (0, _internal.element)(\"br\");\n      t3 = (0, _internal.text)(\"list\");\n      t4 = (0, _internal.space)();\n      (0, _internal.create_component)(basecontainer.$$.fragment);\n      (0, _internal.attr_dev)(div0, \"class\", \"app-title\");\n      (0, _internal.add_location)(div0, file, 45, 4, 857);\n      (0, _internal.attr_dev)(button0, \"class\", \"svelte-1kyw3xo\");\n      (0, _internal.add_location)(button0, file, 51, 8, 997);\n      (0, _internal.add_location)(br, file, 60, 15, 1244);\n      (0, _internal.attr_dev)(button1, \"class\", \"svelte-1kyw3xo\");\n      (0, _internal.add_location)(button1, file, 59, 8, 1194);\n      (0, _internal.attr_dev)(div1, \"class\", \"app-title-controls\");\n      (0, _internal.add_location)(div1, file, 49, 4, 947);\n      (0, _internal.attr_dev)(div2, \"class\", \"app-header\");\n      (0, _internal.add_location)(div2, file, 44, 0, 828);\n      dispose = [(0, _internal.listen_dev)(button0, \"click\",\n      /*toggleFormHandler*/\n      ctx[1], false, false, false), (0, _internal.listen_dev)(button1, \"click\",\n      /*newListHandler*/\n      ctx[2], false, false, false)];\n    },\n    l: function claim(nodes) {\n      throw new Error(\"options.hydrate only works if the component was compiled with the `hydratable: true` option\");\n    },\n    m: function mount(target, anchor) {\n      (0, _internal.insert_dev)(target, div2, anchor);\n      (0, _internal.append_dev)(div2, div0);\n      (0, _internal.mount_component)(logo, div0, null);\n      (0, _internal.append_dev)(div2, t0);\n      (0, _internal.append_dev)(div2, div1);\n      (0, _internal.append_dev)(div1, button0);\n      if_block.m(button0, null);\n      (0, _internal.append_dev)(div1, t1);\n      (0, _internal.append_dev)(div1, button1);\n      (0, _internal.append_dev)(button1, t2);\n      (0, _internal.append_dev)(button1, br);\n      (0, _internal.append_dev)(button1, t3);\n      (0, _internal.insert_dev)(target, t4, anchor);\n      (0, _internal.mount_component)(basecontainer, target, anchor);\n      current = true;\n    },\n    p: function update(ctx, [dirty]) {\n      if (current_block_type !== (current_block_type = select_block_type(ctx, dirty))) {\n        if_block.d(1);\n        if_block = current_block_type(ctx);\n\n        if (if_block) {\n          if_block.c();\n          if_block.m(button0, null);\n        }\n      }\n\n      const basecontainer_changes = {};\n      if (dirty &\n      /*store*/\n      1) basecontainer_changes.store =\n      /*store*/\n      ctx[0];\n      basecontainer.$set(basecontainer_changes);\n    },\n    i: function intro(local) {\n      if (current) return;\n      (0, _internal.transition_in)(logo.$$.fragment, local);\n      (0, _internal.transition_in)(basecontainer.$$.fragment, local);\n      current = true;\n    },\n    o: function outro(local) {\n      (0, _internal.transition_out)(logo.$$.fragment, local);\n      (0, _internal.transition_out)(basecontainer.$$.fragment, local);\n      current = false;\n    },\n    d: function destroy(detaching) {\n      if (detaching) (0, _internal.detach_dev)(div2);\n      (0, _internal.destroy_component)(logo);\n      if_block.d();\n      if (detaching) (0, _internal.detach_dev)(t4);\n      (0, _internal.destroy_component)(basecontainer, detaching);\n      (0, _internal.run_all)(dispose);\n    }\n  };\n  (0, _internal.dispatch_dev)(\"SvelteRegisterBlock\", {\n    block,\n    id: create_fragment.name,\n    type: \"component\",\n    source: \"\",\n    ctx\n  });\n  return block;\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n  let store = {\n    showForm: false,\n    isLoading: false,\n    activeList: []\n  };\n  (0, _svelte.onMount)(async () => {\n    $$invalidate(0, store.isLoading = true, store);\n    const shoppingList = await (0, _connectionUtility.getListDataFromServer)();\n    $$invalidate(0, store.activeList = shoppingList, store);\n    $$invalidate(0, store.isLoading = false, store);\n  });\n\n  const toggleFormHandler = () => {\n    $$invalidate(0, store.showForm = !store.showForm, store);\n  };\n\n  const newListHandler = () => {\n    $$invalidate(0, store.activeList = [], store);\n  };\n\n  $$self.$capture_state = () => {\n    return {};\n  };\n\n  $$self.$inject_state = $$props => {\n    if (\"store\" in $$props) $$invalidate(0, store = $$props.store);\n  };\n\n  return [store, toggleFormHandler, newListHandler];\n}\n\nclass App extends _internal.SvelteComponentDev {\n  constructor(options) {\n    super(options);\n    if (!document.getElementById(\"svelte-1kyw3xo-style\")) add_css();\n    (0, _internal.init)(this, options, instance, create_fragment, _internal.safe_not_equal, {});\n    (0, _internal.dispatch_dev)(\"SvelteRegisterComponent\", {\n      component: this,\n      tagName: \"App\",\n      options,\n      id: create_fragment.name\n    });\n  }\n\n}\n\nvar _default = App;\nexports.default = _default;","css":"button.svelte-1kyw3xo{width:6.5rem;margin:0 .2rem;height:100%}"},"sourceMaps":{"js":{"mappings":[{"source":"app.svelte","name":null,"original":{"line":37,"column":4},"generated":{"line":20,"column":0}}],"sources":{"app.svelte":"<script>\n    import { onMount } from 'svelte';\n    import { getListDataFromServer } from './data/connectionUtility';\n\n    import Logo from './components/logo.svelte';\n    import BaseContainer from './components/baseContainer.svelte';\n\n\n    let store = {\n        showForm: false,\n        isLoading: false,\n        activeList: []\n    };\n\n\n    onMount(async () => {\n        store.isLoading = true;\n        \n        const shoppingList = await getListDataFromServer();\n        store.activeList = shoppingList;\n\n        store.isLoading = false;\n    });\n\n\n    const toggleFormHandler = () => {\n        store.showForm = !store.showForm;\n    }\n\n    const newListHandler = () => {\n        store.activeList = [];\n    }\n</script>\n\n\n<style>\n    button {\n        width: 6.5rem;\n        margin: 0 .2rem;\n        height: 100%;\n    }\n</style>\n\n\n<div class=\"app-header\">\n    <div class=\"app-title\">\n        <Logo partOne=\"coupl\" partTwo=\"shoppr\" />\n    </div>\n\n    <div class=\"app-title-controls\">\n        \n        <button on:click={toggleFormHandler}>\n            {#if store.showForm}\n                hide<br/>items\n            {:else}\n                add<br/>items\n            {/if}\n        </button>\n\n        <button on:click={newListHandler}>\n            new<br/>list\n        </button>\n\n    </div>\n</div>\n\n<BaseContainer store={store} />"},"lineCount":null}},"error":null,"hash":"2ab42fe76d7a29a382ec4f320b1a27d2","cacheData":{"env":{}}}